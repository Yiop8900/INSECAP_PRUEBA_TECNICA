// <auto-generated />
using System;
using INSECAP.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace INSECAP.Migrations
{
    [DbContext(typeof(CapacitacionesContext))]
    [Migration("20240512054119_CascadeDelete")]
    partial class CascadeDelete
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("INSECAP.Models.Alumno", b =>
                {
                    b.Property<int>("RunAlumno")
                        .HasColumnType("int")
                        .HasColumnName("RUN_Alumno");

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("DvAlumno")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("char(10)")
                        .HasColumnName("DV_Alumno")
                        .IsFixedLength();

                    b.Property<DateOnly>("FechaNacimiento")
                        .HasColumnType("date")
                        .HasColumnName("Fecha_Nacimiento");

                    b.Property<string>("Genero")
                        .IsRequired()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .IsFixedLength();

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("RunAlumno");

                    b.ToTable("Alumno", (string)null);
                });

            modelBuilder.Entity("INSECAP.Models.AsignacionCursosAlu", b =>
                {
                    b.Property<int>("IdAsignacion")
                        .HasColumnType("int")
                        .HasColumnName("ID_Asignacion");

                    b.Property<string>("CodigoCurso")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Codigo_Curso");

                    b.Property<string>("CodigoSala")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Codigo_Sala");

                    b.Property<int>("IdBimestre")
                        .HasColumnType("int")
                        .HasColumnName("ID_Bimestre");

                    b.Property<int>("RunAlumno")
                        .HasColumnType("int")
                        .HasColumnName("RUN_Alumno");

                    b.HasKey("IdAsignacion");

                    b.HasIndex("CodigoCurso");

                    b.HasIndex("CodigoSala");

                    b.HasIndex("IdBimestre");

                    b.HasIndex("RunAlumno");

                    b.ToTable("Asignacion_Cursos_Alu", (string)null);
                });

            modelBuilder.Entity("INSECAP.Models.AsignacionCursosPro", b =>
                {
                    b.Property<int>("IdAsignacion")
                        .HasColumnType("int")
                        .HasColumnName("ID_Asignacion");

                    b.Property<string>("CodigoCurso")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Codigo_Curso");

                    b.Property<int>("IdBimestre")
                        .HasColumnType("int")
                        .HasColumnName("ID_Bimestre");

                    b.Property<int>("RunProfesor")
                        .HasColumnType("int")
                        .HasColumnName("RUN_Profesor");

                    b.HasKey("IdAsignacion");

                    b.HasIndex("IdBimestre");

                    b.HasIndex("RunProfesor");

                    b.HasIndex(new[] { "CodigoCurso", "RunProfesor", "IdBimestre" }, "UQ_Asignacion_Cursos_Pro_Bimestre")
                        .IsUnique();

                    b.ToTable("Asignacion_Cursos_Pro", (string)null);
                });

            modelBuilder.Entity("INSECAP.Models.Bimestre", b =>
                {
                    b.Property<int>("IdBimestre")
                        .HasColumnType("int")
                        .HasColumnName("ID_Bimestre");

                    b.Property<int>("Anio")
                        .HasColumnType("int");

                    b.Property<DateOnly>("FechaFin")
                        .HasColumnType("date")
                        .HasColumnName("Fecha_Fin");

                    b.Property<DateOnly>("FechaInicio")
                        .HasColumnType("date")
                        .HasColumnName("Fecha_Inicio");

                    b.Property<int>("NumeroBimestre")
                        .HasColumnType("int")
                        .HasColumnName("Numero_Bimestre");

                    b.HasKey("IdBimestre");

                    b.ToTable("Bimestre", (string)null);
                });

            modelBuilder.Entity("INSECAP.Models.Curso", b =>
                {
                    b.Property<string>("CodigoCurso")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Codigo_Curso");

                    b.Property<string>("NombreCurso")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Nombre_Curso");

                    b.HasKey("CodigoCurso");

                    b.ToTable("Curso", (string)null);
                });

            modelBuilder.Entity("INSECAP.Models.Nota", b =>
                {
                    b.Property<int>("IdNota")
                        .HasColumnType("int")
                        .HasColumnName("ID_Nota");

                    b.Property<string>("CodigoCurso")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Codigo_Curso");

                    b.Property<int>("IdBimestre")
                        .HasColumnType("int")
                        .HasColumnName("ID_Bimestre");

                    b.Property<double>("Nota1")
                        .HasColumnType("float")
                        .HasColumnName("Nota");

                    b.Property<int>("RunAlumno")
                        .HasColumnType("int")
                        .HasColumnName("RUN_Alumno");

                    b.HasKey("IdNota");

                    b.HasIndex("CodigoCurso");

                    b.HasIndex("IdBimestre");

                    b.HasIndex("RunAlumno");

                    b.ToTable("Notas");
                });

            modelBuilder.Entity("INSECAP.Models.Profesor", b =>
                {
                    b.Property<int>("RunProfesor")
                        .HasColumnType("int")
                        .HasColumnName("RUN_Profesor");

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("DvProfesor")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("char(10)")
                        .HasColumnName("DV_Profesor")
                        .IsFixedLength();

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("RunProfesor");

                    b.ToTable("Profesor", (string)null);
                });

            modelBuilder.Entity("INSECAP.Models.Sala", b =>
                {
                    b.Property<string>("CodigoSala")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Codigo_Sala");

                    b.Property<int>("CapacidadMaxima")
                        .HasColumnType("int")
                        .HasColumnName("Capacidad_Maxima");

                    b.Property<int>("CaracteristicasEspeciales")
                        .HasColumnType("int")
                        .HasColumnName("Caracteristicas_Especiales");

                    b.HasKey("CodigoSala");

                    b.ToTable("Sala", (string)null);
                });

            modelBuilder.Entity("INSECAP.Models.AsignacionCursosAlu", b =>
                {
                    b.HasOne("INSECAP.Models.Curso", "CodigoCursoNavigation")
                        .WithMany("AsignacionCursosAlus")
                        .HasForeignKey("CodigoCurso")
                        .IsRequired()
                        .HasConstraintName("FK_Asignacion_Cursos_Alu_Curso");

                    b.HasOne("INSECAP.Models.Sala", "CodigoSalaNavigation")
                        .WithMany("AsignacionCursosAlus")
                        .HasForeignKey("CodigoSala")
                        .IsRequired()
                        .HasConstraintName("FK_Asignacion_Cursos_Alu_Sala");

                    b.HasOne("INSECAP.Models.Bimestre", "IdBimestreNavigation")
                        .WithMany("AsignacionCursosAlus")
                        .HasForeignKey("IdBimestre")
                        .IsRequired()
                        .HasConstraintName("FK_Asignacion_Cursos_Alu_Bimestre");

                    b.HasOne("INSECAP.Models.Alumno", "RunAlumnoNavigation")
                        .WithMany("AsignacionCursosAlus")
                        .HasForeignKey("RunAlumno")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_Asignacion_Cursos_Alu_Alumno");

                    b.Navigation("CodigoCursoNavigation");

                    b.Navigation("CodigoSalaNavigation");

                    b.Navigation("IdBimestreNavigation");

                    b.Navigation("RunAlumnoNavigation");
                });

            modelBuilder.Entity("INSECAP.Models.AsignacionCursosPro", b =>
                {
                    b.HasOne("INSECAP.Models.Curso", "CodigoCursoNavigation")
                        .WithMany("AsignacionCursosPros")
                        .HasForeignKey("CodigoCurso")
                        .IsRequired()
                        .HasConstraintName("FK_Asignacion_Cursos_Pro_Curso");

                    b.HasOne("INSECAP.Models.Bimestre", "IdBimestreNavigation")
                        .WithMany("AsignacionCursosPros")
                        .HasForeignKey("IdBimestre")
                        .IsRequired()
                        .HasConstraintName("FK_Asignacion_Cursos_Pro_Bimestre");

                    b.HasOne("INSECAP.Models.Profesor", "RunProfesorNavigation")
                        .WithMany("AsignacionCursosPros")
                        .HasForeignKey("RunProfesor")
                        .IsRequired()
                        .HasConstraintName("FK_Asignacion_Cursos_Pro_Profesor");

                    b.Navigation("CodigoCursoNavigation");

                    b.Navigation("IdBimestreNavigation");

                    b.Navigation("RunProfesorNavigation");
                });

            modelBuilder.Entity("INSECAP.Models.Nota", b =>
                {
                    b.HasOne("INSECAP.Models.Curso", "CodigoCursoNavigation")
                        .WithMany("Nota")
                        .HasForeignKey("CodigoCurso")
                        .IsRequired()
                        .HasConstraintName("FK_Notas_Curso");

                    b.HasOne("INSECAP.Models.Bimestre", "IdBimestreNavigation")
                        .WithMany("Nota")
                        .HasForeignKey("IdBimestre")
                        .IsRequired()
                        .HasConstraintName("FK_Notas_Bimestre");

                    b.HasOne("INSECAP.Models.Alumno", "RunAlumnoNavigation")
                        .WithMany("Nota")
                        .HasForeignKey("RunAlumno")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_Notas_Alumno");

                    b.Navigation("CodigoCursoNavigation");

                    b.Navigation("IdBimestreNavigation");

                    b.Navigation("RunAlumnoNavigation");
                });

            modelBuilder.Entity("INSECAP.Models.Alumno", b =>
                {
                    b.Navigation("AsignacionCursosAlus");

                    b.Navigation("Nota");
                });

            modelBuilder.Entity("INSECAP.Models.Bimestre", b =>
                {
                    b.Navigation("AsignacionCursosAlus");

                    b.Navigation("AsignacionCursosPros");

                    b.Navigation("Nota");
                });

            modelBuilder.Entity("INSECAP.Models.Curso", b =>
                {
                    b.Navigation("AsignacionCursosAlus");

                    b.Navigation("AsignacionCursosPros");

                    b.Navigation("Nota");
                });

            modelBuilder.Entity("INSECAP.Models.Profesor", b =>
                {
                    b.Navigation("AsignacionCursosPros");
                });

            modelBuilder.Entity("INSECAP.Models.Sala", b =>
                {
                    b.Navigation("AsignacionCursosAlus");
                });
#pragma warning restore 612, 618
        }
    }
}
